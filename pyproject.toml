[build-system]
build-backend = 'flit_core.buildapi'
requires = ['flit_core >=3.4,<4']

[project]
name = "aiida-sssp-workflow"
dynamic = ['version']   # read from aiidalab_sss_workflow/__init__.py
authors = [{name = "Jusong Yu", email = "jusong.yu@psi.ch"}]
maintainers = [{name = "Jusong Yu", email = "jusong.yu@psi.ch"}]
description = "Package for the AiiDA SSSP workflow"
readme = "README.md"
requires-python = ">=3.9"
license = {file="LICENSE"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Framework :: AiiDA",
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "aiida-core[atomic_tools]~=2.4",
    "aiida-quantumespresso~=4.3"
]

[project.optional-dependencies]
dev = [
    "bumpver==2021.1114",
    "pre-commit==2.10.0",
    "pgtest>=1.3.1,~=1.3",
    "pytest~=7.0",
    "pytest-regressions~=2.2"
]

[project.scripts]
aiida-sssp-workflow = "aiida_sssp_workflow.cli:cmd_root"

[project.entry-points."aiida.calculations"]
"sssp_workflow.birch_murnaghan_fit" = "aiida_sssp_workflow.calculations.birch_murnaghan_fit:birch_murnaghan_fit"

[project.entry-points."aiida.workflows"]
"sssp_workflow.measure.transferability" = "aiida_sssp_workflow.workflows.measure.transferability:EOSTransferabilityWorkChain"
"sssp_workflow.measure.bands" = "aiida_sssp_workflow.workflows.measure.bands:BandStructureWorkChain"
"sssp_workflow.convergence.caching" = "aiida_sssp_workflow.workflows.convergence.caching:_CachingConvergenceWorkChain"
"sssp_workflow.convergence.eos" = "aiida_sssp_workflow.workflows.convergence.eos:ConvergenceEOSWorkChain"
"sssp_workflow.convergence.cohesive_energy" = "aiida_sssp_workflow.workflows.convergence.cohesive_energy:ConvergenceCohesiveEnergyWorkChain"
"sssp_workflow.convergence.phonon_frequencies" = "aiida_sssp_workflow.workflows.convergence.phonon_frequencies:ConvergencePhononFrequenciesWorkChain"
"sssp_workflow.convergence.pressure" = "aiida_sssp_workflow.workflows.convergence.pressure:ConvergencePressureWorkChain"
"sssp_workflow.convergence.bands" = "aiida_sssp_workflow.workflows.convergence.bands:ConvergenceBandsWorkChain"
"sssp_workflow.verification" = "aiida_sssp_workflow.workflows.verifications:VerificationWorkChain"

[project.urls]
Documentation = "https://aiida-sssp-workflow.readthedocs.io/"
Source = "https://github.com/aiidateam/aiida-sssp-workflow"

[tool.flit.external-data]
aiida_sssp_workflow = [
    "protocol/*.yml",
    "statics/structures/gs/*.cif",
    "statics/structures/oxides/*.xsf",
    "statics/structures/unaries/*.xsf",
    "statics/structures/mapping.json",
    "statics/upf/*.upf",
    "statics/AE_EOS/*.json"
]

[tool.pytest.ini_options]
filterwarnings = [
    'ignore:Creating AiiDA configuration folder.*:UserWarning',
    'ignore:Object of type .* not in session, .* operation along .* will not proceed:sqlalchemy.exc.SAWarning',
    'ignore:The `Code` class is deprecated.*:aiida.common.warnings.AiidaDeprecationWarning',
    'ignore:`CalcJobNode.*` is deprecated.*:aiida.common.warnings.AiidaDeprecationWarning',
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
